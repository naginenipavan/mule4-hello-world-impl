name: Qa Release
run-name: Qa Release and Tagging

on:
  push:
    branches: [ qa ] 

jobs:
  build-release-qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v3.3.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8
      - name: Clean and Compile with Maven
        env:
          USERNAME: ${{ secrets.anypoint_username }}
          PASSWORD: ${{ secrets.anypoint_password }}
        run: mvn clean compile -U -s .maven/settings.xml -Danypoint_username="$USERNAME" -Danypoint_password="$PASSWORD"
      - name: Remove SNAPSHOT and prepare release
        run: mvn versions:set -DremoveSnapshot
      - name: Compile and Test the project 
        run: |
          mvn clean compile -U -s .maven/settings.xml
          mvn test -Denv=sit 
      - name: Extract the POM version
        id: retrieve-pom-version
        run: |
          echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT  
      - name: Tag the release and commit/push changes to remote repository
        env: 
          POM_VERSION: ${{ steps.retrieve-pom-version.outputs.POM_VERSION }}
        run: |
          echo "$POM_VERSION"
          git add pom.xml 
          git config --global user.email "naginenipavan@outlook.com"
          git config --global user.name "Pavan Nagineni"
          git commit -m "Release $POM_VERSION"
          git tag "$POM_VERSION"
          echo "Released to $POM_VERSION version."
          git push origin qa "$POM_VERSION"
      - name: Checkout the Develop branch and Merge the Qa Release change
        env: 
          POM_VERSION: ${{ steps.retrieve-pom-version.outputs.POM_VERSION }}
        run: |
          git remote update --prune
          git checkout origin/develop --force
          git reset --hard origin/qa
      - name: Prepare the next development version in develop branch 
        run: |
          mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}-SNAPSHOT'
          mvn versions:commit
          git add pom.xml 
          git config --global user.email 'naginenipavan@outlook.com'
          git config --global user.name "Pavan Nagineni" 
          echo "incremented to next $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) version."
          git commit -m "incremented to next $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) version"
          git push -f -u origin HEAD:develop 