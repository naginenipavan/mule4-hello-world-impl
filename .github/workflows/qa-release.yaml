name: Qa Release
run-name: Sit Build and Deployment

on:
  push:
    branches: [ qa ] 

jobs:
  build-release-qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v3.3.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8
      - name: Clean with Maven
        run: mvn clean compile 
      - name: Run Munit tests 
        run: mvn test
      - name: Remove SNAPSHOT and prepare release and tag the release
        run: mvn versions:set -DremoveSnapshot
      - name: Compile and Test the project 
        run: | 
          mvn clean compile -U
          mvn test -Denv=sit 
      - name: Extract the POM version 
        id: retrieve-pom-version
        run: |
          POM_VERSION=mvn help:evaluate -Dexpression=project.version -q -DforceStdout
          echo "The Release POM_VERSION is going to be: $POM_VERSION"
          echo "POM_VERSION=$POM_VERSION" >> $GITHUB_OUTPUT  
      - name: Tag the release and commit/push changes to remote repository
        env: 
          POM_VERSION: ${{ steps.retrieve-pom-version.outputs.POM_VERSION }}
        run: | 
          git add pom.xml 
          git config --global user.email 'naginenipavan@outlook.com'
          git config --global user.name "Pavan Nagineni" |
          git commit -m "Release $POM_VERSION" |
          git tag "$POM_VERSION" |
          git push origin qa "$POM_VERSION" 


